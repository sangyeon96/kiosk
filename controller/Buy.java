package controller;

import java.util.LinkedList;

import javax.swing.JOptionPane;

import model.Food;
import model.Order;
import model.Payment;
import model.SelectedFood;
import model.ToppingDecorator;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Kiosk
//  @ File Name : Buy.java
//  @ Date : 2018-12-16
//  @ Author : 
//
//

public class Buy implements Command
{
	public OrderController 			controlOrder;
	public LinkedList<SelectedFood> finalCart;
	public LinkedList<Order> 		allOrder;
	public Purchase					controlPurchase;
	public SelectedFood				tmpSelected;
	
	Buy(){
		finalCart 		= new LinkedList<SelectedFood>();
		controlOrder 	= new OrderController();
		controlPurchase = new Purchase();
		
		// get orderList head addr to reduce approach time
		allOrder = controlOrder.orderList;
	}
	
	public SelectedFood putInCart(Food WillAdd)
	{
		/*  if the put in button selected in main, this method will be started.
		 *  1. choose one food in view, others' checkbox will be disabled.
		 *  2. choose toppings and flavor about the food.
		 *  3. click put in button and the food with toppings and flavor will be a selectedFood object
		 *  4. 2-3 will be repeated, with adding them to currentCart
		 *  5. if the purchease button is pushed, the currentCart will be finalCart in Buy, and this method will be done.
		 */
		SelectedFood mySelected = new SelectedFood();
		mySelected.name = WillAdd.name;
		mySelected.price = WillAdd.price;
		mySelected.flavor = WillAdd.flavor;
		mySelected.selectedTopping = WillAdd.myToppings;
		
		return mySelected;
	}
	
	public SelectedFood putInCart(ToppingDecorator WillAddTopp)
	{
		SelectedFood mySelected = new SelectedFood();
		mySelected.name = WillAddTopp.name;
		mySelected.price = WillAddTopp.price;
		mySelected.flavor = WillAddTopp.flavor;
		mySelected.selectedTopping = WillAddTopp.myToppings;
		
		return mySelected;
	}
	
	public boolean purchase(LinkedList<SelectedFood> finalCart)
	{
		/*
		 *  1. choose payment
		 *  2. send purchase Req to external system
		 *  3. get Req from external system
		 *  4. make Order object and put it in orderList
		 */
		
		controlPurchase.calculateTotalPrice(finalCart);
		controlPurchase.choosePayment();
		
		return controlPurchase.tryPurchase();
	}
	
	@Override
	public void execute() {
		
	}

	@Override
	public SelectedFood execute(Food WillAdd) {
		return putInCart(WillAdd);
	}
	
	@Override
	public SelectedFood execute(ToppingDecorator WillAddTopp) {
		return putInCart(WillAddTopp);
	}

	@Override
	public boolean execute(LinkedList<SelectedFood> finalCart) {
		return purchase(finalCart);
	}
}
